name: monthly
on:
  schedule:
    - cron: "0 6 1 * *"
  workflow_dispatch:

jobs:
  run-python-script:
    runs-on: ubuntu-latest
    env:
      GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache WebDriverManager
        uses: actions/cache@v4
        with:
          path: ~/.wdm
          key: ${{ runner.os }}-wdm-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-wdm-

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      # NEW: Use v3 and OAuth client (no auth key)
      - name: Connect to Tailscale (OAuth)
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: "tag:github-runner"
          args: >-
            --exit-node=${{ secrets.TS_EXIT_NODE_IP }}
            --accept-routes
            --accept-dns=false
            --timeout=60s

      # Helpful diagnostics if something goes wrong
      - name: Tailscale status / IP check
        run: |
          set -x
          tailscale status || true
          echo "Runner egress IP (should be exit-node IP):"
          curl -4s https://ifconfig.me || true

      - name: Preflight connectivity (DNS/egress)
        run: |
          set -e
          probes_ok=0
          for url in https://oauth2.googleapis.com https://www.googleapis.com; do
            if curl -fsS --max-time 10 "$url" >/dev/null; then
              probes_ok=$((probes_ok+1))
            fi
          done
          if [ "$probes_ok" -ge 1 ]; then
            echo "Connectivity OK via current network"
          else
            echo "Connectivity probes failed. Attempting to keep Tailscale but drop exit-node." 
            # Try dropping exit-node first (keeps tailnet routing and DNS if any)
            sudo -E tailscale set --exit-node= --exit-node-allow-lan-access=false || true
            # Recheck quickly; if still failing, proceed without Tailscale
            if curl -fsS --max-time 10 https://oauth2.googleapis.com >/dev/null; then
              echo "Connectivity OK after removing exit-node"
            else
              echo "Still failing; bringing Tailscale down and continuing without it."
              sudo -E tailscale down || true
            fi
          fi

      - name: Init run log
        run: echo "--- run start $(date -u +'%Y-%m-%dT%H:%M:%SZ') ---" > run.log

      - name: Run Python Script
        run: |
          set -o pipefail
          python app.py 2>&1 | tee -a run.log

      - name: Upload run log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-log
          path: run.log
          if-no-files-found: warn

      # Optional: capture tailscaled log if needed
      - name: Dump tailscaled log on failure
        if: failure()
        run: |
          echo "---- tailscaled.log ----"
          cat ~/tailscaled.log || true